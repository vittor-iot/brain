# Generated by Django 3.2.9 on 2021-12-22 12:40

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app01', '0006_authgroup_authgrouppermissions_authpermission_authuser_authusergroups_authuseruserpermissions_django'),
    ]

    operations = [
        migrations.CreateModel(
            name='Adminuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_id', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('disable', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'adminuser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('videoid', models.CharField(max_length=255)),
                ('userid', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LookVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255)),
                ('videotype', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'look_video',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('after_url', models.CharField(blank=True, max_length=255, null=True)),
                ('before_url', models.CharField(max_length=255)),
                ('user_openid', models.CharField(max_length=255)),
                ('pose_report', models.TextField(blank=True, null=True)),
                ('doctor_url', models.CharField(blank=True, max_length=255, null=True)),
                ('assessstatus', models.IntegerField(db_column='assessStatus')),
            ],
            options={
                'db_table': 'pose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecoveryRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openid', models.CharField(blank=True, max_length=255, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('time', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'recovery_rank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrainResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openid', models.CharField(blank=True, max_length=255, null=True)),
                ('trainscore', models.FloatField(blank=True, null=True)),
                ('time', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'train_result',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Video',
        ),
        migrations.DeleteModel(
            name='Videocomment',
        ),
    ]
